/**
 * Copyright (c) 2021 OpenLens Authors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

// Pods
$pod-status-running-color: var(--colorOk);
$pod-status-pending-color: var(--colorWarning);
$pod-status-evicted-color: var(--colorError);
$pod-status-succeeded-color: var(--colorSuccess);
$pod-status-failed-color: var(--colorError);
$pod-status-terminated-color: var(--colorTerminated);
$pod-status-terminating-color: var(--colorTerminated);
$pod-status-unknown-color: var(--colorVague);
$pod-status-complete-color: var(--colorSuccess);
$pod-status-crash-loop-color: var(--colorError);
$pod-scheduled: var(--colorOk);
$pod-ready: var(--colorOk);
$pod-initialized: var(--colorOk);
$pod-unschedulable: var(--colorError);
$pod-containers-ready: var(--colorInfo);
$pod-error: var(--colorError);
$pod-container-creating: var(--colorInfo);

// Deployments
$deployment-available: var(--colorOk);
$deployment-progressing: var(--colorInfo);
$deployment-replicafailure: var(--colorError);

// Jobs
$job-complete: var(--colorSuccess);
$job-failed: var(--colorError);

// Cronjob
$cronjob-scheduled: var(--colorSuccess);
$cronjob-suspended: var(--colorTerminated);

// Pod Statuses
$pod-status-color-list: (
  running: $pod-status-running-color,
  pending: $pod-status-pending-color,
  evicted: $pod-status-evicted-color,
  waiting: $pod-status-pending-color,
  succeeded: $pod-status-succeeded-color,
  failed: $pod-status-failed-color,
  terminating: $pod-status-terminating-color,
  terminated: $pod-status-terminated-color,
  completed: $pod-status-complete-color,
  crash-loop-back-off: $pod-status-crash-loop-color,
  error: $pod-error,
  container-creating: $pod-container-creating,
);

// Job Conditions
$job-condition-color-list: (
  complete: $job-complete,
  failed: $job-failed,
);

// Cronjob Conditions
$cronjob-condition-color-list: (
  scheduled: $cronjob-scheduled,
  suspended: $cronjob-suspended,
);

@mixin pod-status-bgs {
  @each $status, $color in $pod-status-color-list {
    &.#{$status} {
      color: white;
      background: $color;
    }
  }
}

@mixin pod-status-colors {
  @each $status, $color in $pod-status-color-list {
    &.#{$status} {
      color: $color;
    }
  }
}

@mixin job-condition-bgs {
  @each $condition, $color in $job-condition-color-list {
    .#{$condition} {
      color: white;
      background: $color;
    }
  }
}

@mixin job-condition-colors {
  @each $condition, $color in $job-condition-color-list {
    &.#{$condition} {
      color: $color;
    }
  }
}
